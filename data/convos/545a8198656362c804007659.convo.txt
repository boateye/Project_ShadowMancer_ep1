idRef {
  id: "545a8198656362c804007659"
}
ui_name: "BuyingTheCobra"
nodes {
  idRef {
    id: "545a8217656362c804007664"
  }
  index: 0
  text: "{{GM}}The Japanese Woman behind the counter looks like she has a few years on old Deane, none of them with the benefit of science.{{/GM}}"
  branches {
    responseText: "I want to buy a weapon."
    nextNodeIndex: 1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "545a8d226563624410003939"
  }
  index: 1
  text: "Two Hour. Come back in two hour."
  branches {
    responseText: "No, I need something now."
    nextNodeIndex: 2
  }
  branches {
    responseText: "Ain\'t nobody got time for that!"
    nextNodeIndex: 7
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "545a8d926563624410003967"
  }
  index: 2
  text: ""
  branches {
    responseText: ""
    nextNodeIndex: 3
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "545a8daf656362441000396b"
  }
  index: 3
  text: "{{GM}}You produce a slender roll of Nuyen and show it to her.{{/GM}}\n\n{{GM}}She gestures in the direction of a case of knives.{{/GM}}\n"
  branches {
    responseText: "No, I don\'t like knives."
    nextNodeIndex: 4
  }
  branches {
    responseText: "I don\'t need those. Like maybe I wanna shoot somebody, understand?"
    conditions {
      ops {
        functionName: "No Condition"
      }
    }
    nextNodeIndex: 5
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Remove Nuyen"
      args {
        int_value: 1000
      }
    }
  }
}
nodes {
  idRef {
    id: "5467dead65636228090039cf"
  }
  index: 4
  text: "{{GM}}The woman directs your attention to the display case of shurikens that you neglected on your way in.{{/GM}}"
  branches {
    responseText: "I have no idea how I missed those, thanks."
    actions {
      ops {
        functionName: "Set Variable (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "bool_Chatted"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "545a8daf6563624410003973"
  }
  index: 5
  text: ""
  branches {
    responseText: ""
    nextNodeIndex: 6
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5467dea065636228090039cb"
  }
  index: 6
  text: "{{GM}}The woman produces a an oblong box from beneath the counter. The lid is yellow cardboard, stamped with a crude image of a coiled cobra with a swollen hood. Inside, there are eight identical tissue-wrapped cylinders. She holds it up for you to examine it. It\'s a dull steel tube with a leather thong at one end and a small bronze pyramid at the other. Showing you how to use it, she grips the tube with one hand, the pyramid between the thumb and forefinger, and pulled. Three oiled and telescoping segments of tightly wound coilspring slid out and locked. {{/GM}}\n\nCobra."
  branches {
    responseText: "I\'ll take it."
    actions {
      ops {
        functionName: "Assign Conversation to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Conversation)"
            args {
              string_value: "545a8198656362c804007659"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Actor)"
            args {
              string_value: "545a7f5a656362c804007657"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "EnableOrDisable"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "cobra"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  branches {
    responseText: "Now that\'s more like it."
    actions {
      ops {
        functionName: "Assign Conversation to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Conversation)"
            args {
              string_value: "545a8198656362c804007659"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Actor)"
            args {
              string_value: "545a7f5a656362c804007657"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "EnableOrDisable"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "cobra"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Player)"
                args {
                  int_value: 0
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "545a8dc16563624410003978"
  }
  index: 7
  text: ""
  branches {
    responseText: ""
    nextNodeIndex: 3
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5467e5586563622809003a6e"
  }
  index: 8
  text: ""
  branches {
    responseText: "I don\'t need those. Like maybe I wanna shoot somebody, understand?"
    conditions {
      ops {
        functionName: "No Condition"
      }
    }
    nextNodeIndex: 9
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5467e5626563622809003a79"
  }
  index: 9
  text: ""
  branches {
    responseText: ""
    nextNodeIndex: 10
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5467e5626563622809003a7c"
  }
  index: 10
  text: "{{GM}}The woman produces a an oblong box from beneath the counter. The lid is yellow cardboard, stamped with a crude image of a coiled cobra with a swollen hood. Inside, there are eight identical tissue-wrapped cylinders. She holds it up for you to examine it. It\'s a dull steel tube with a leather thong at one end and a small bronze pyramid at the other. Showing you how to use it, she grips the tube with one hand, the pyramid between the thumb and forefinger, and pulled. Three oiled and telescoping segments of tightly wound coilspring slid out and locked. {{/GM}}\n\nCobra."
  branches {
    responseText: "I\'ll take it."
    actions {
      ops {
        functionName: "Assign Conversation to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Conversation)"
            args {
              string_value: "545a8198656362c804007659"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Actor)"
            args {
              string_value: "545a7f5a656362c804007657"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "EnableOrDisable"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "cobra"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Actor)"
                args {
                  string_value: "545a7253656362c804007605"
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  branches {
    responseText: "Now that\'s more like it."
    actions {
      ops {
        functionName: "Assign Conversation to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Conversation)"
            args {
              string_value: "545a8198656362c804007659"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Actor)"
            args {
              string_value: "545a7f5a656362c804007657"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "EnableOrDisable"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Add Item to Actor"
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "cobra"
            }
          }
        }
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Get Map Item (Actor)"
                args {
                  string_value: "545a7253656362c804007605"
                }
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "WithOrWithout"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bool_Chatted"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  nextNodeIndex: 0
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bool_Shuriken"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "bool_Chatted"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  nextNodeIndex: 8
}
